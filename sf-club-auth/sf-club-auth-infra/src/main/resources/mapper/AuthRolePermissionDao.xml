<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingdiansuifeng.auth.infra.basic.mapper.AuthRolePermissionDao">

    <resultMap type="com.jingdiansuifeng.auth.infra.basic.entity.AuthRolePermission" id="AuthRolePermissionMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="permissionId" column="permission_id" jdbcType="INTEGER"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AuthRolePermissionMap">
        select
          id, role_id, permission_id, created_by, created_time, updated_by, updated_time, is_deleted
        from auth_role_permission
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AuthRolePermissionMap">
        select
          id, role_id, permission_id, created_by, created_time, updated_by, updated_time, is_deleted
        from auth_role_permission
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="permissionId != null">
                and permission_id = #{permissionId}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from auth_role_permission
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="permissionId != null">
                and permission_id = #{permissionId}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into auth_role_permission(role_id, permission_id, created_by, created_time, updated_by, updated_time, is_deleted)
        values (#{roleId}, #{permissionId}, #{createdBy}, #{createdTime}, #{updatedBy}, #{updatedTime}, #{isDeleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into auth_role_permission(role_id, permission_id, created_by, created_time, updated_by, updated_time, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.roleId}, #{entity.permissionId}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updatedBy}, #{entity.updatedTime}, #{entity.isDeleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into auth_role_permission(role_id, permission_id, created_by, created_time, updated_by, updated_time, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleId}, #{entity.permissionId}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updatedBy}, #{entity.updatedTime}, #{entity.isDeleted})
        </foreach>
        on duplicate key update
        role_id = values(role_id),
        permission_id = values(permission_id),
        created_by = values(created_by),
        created_time = values(created_time),
        updated_by = values(updated_by),
        updated_time = values(updated_time),
        is_deleted = values(is_deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update auth_role_permission
        <set>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="permissionId != null">
                permission_id = #{permissionId},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from auth_role_permission where id = #{id}
    </delete>

</mapper>

